apiVersion: v1
kind: Namespace
metadata:
  name: zerodowntime
---
apiVersion: v1
kind: Service
metadata:
  namespace: zerodowntime
  name: green
spec:
  selector:
    color: green
  ports:
    - port: 3306
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: zerodowntime
  name: green-scripts
data:
  a-create-schema.sql: |
    CREATE TABLE CART
    (
      ID            BIGINT    NOT NULL AUTO_INCREMENT PRIMARY KEY,
      LAST_MODIFIED TIMESTAMP NOT NULL
    );

    CREATE TABLE CUSTOMER
    (
      ID      BIGINT      NOT NULL AUTO_INCREMENT PRIMARY KEY,
      NAME    VARCHAR(50) NOT NULL,
      CART_ID BIGINT,
      FOREIGN KEY (CART_ID) REFERENCES CART (ID)
    );

    CREATE TABLE PRODUCT
    (
      ID          BIGINT         NOT NULL AUTO_INCREMENT PRIMARY KEY,
      NAME        VARCHAR(50)    NOT NULL,
      PRICE       DECIMAL(10, 2) NOT NULL,
      DESCRIPTION VARCHAR(250)
    );

    CREATE TABLE CART_LINE
    (
      PRODUCT_ID BIGINT NOT NULL,
      CART_ID    BIGINT NOT NULL,
      QUANTITY   SMALLINT,
      PRIMARY KEY (PRODUCT_ID, CART_ID),
      FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (ID),
      FOREIGN KEY (CART_ID) REFERENCES CART (ID)
    );

    DELIMITER $$

    CREATE PROCEDURE INSERT_CART_LINE(
      IN CUST_ID BIGINT,
      IN PRD_ID BIGINT,
      IN QTY SMALLINT
    )

    BEGIN
      IF (SELECT COUNT(*)
        FROM CART
          JOIN CUSTOMER ON CART.ID = CUSTOMER.CART_ID
        WHERE CUST_ID = CUSTOMER.ID) = 0 THEN
        BEGIN
          INSERT INTO CART(LAST_MODIFIED) VALUES ('1970-01-01 00:00:01');
          UPDATE CUSTOMER
          SET CART_ID = LAST_INSERT_ID()
          WHERE ID = CUST_ID;
        END;
      END IF;
      BEGIN
        REPLACE INTO CART_LINE(PRODUCT_ID, CART_ID, QUANTITY)
        SELECT PRD_ID, CART.ID, QTY
        FROM CART
          JOIN CUSTOMER ON CART.ID = CUSTOMER.CART_ID
        WHERE CUST_ID = CUSTOMER.ID;
      END;
    END
  b-insert-data.sql: |
    INSERT INTO CUSTOMER (ID, NAME)
    VALUES (1, 'Joe'),
           (2, 'Jack'),
           (3, 'William'),
           (4, 'Averell');

    INSERT INTO PRODUCT (ID, NAME, PRICE, DESCRIPTION)
    VALUES (1, 'Yeti Mug', 12.99, 'Our casual-style mug is sure to make someone smile wherever it''s used'),
           (2, 'Top Dev Tee-shirt', 5.99,
            'Short sleeves tee-shirt with Hazelcast printing which shows the courage and positive spirit for your life'),
           (3, 'HZ Hoodie', 34.99,
            'This hoodie pulls out all of the stops to create the ultimate hoodie experience, including a durable high stitch-density cotton mesh'),
           (4, 'Top Dev Sticker', 0.99, 'Show off with this classical sticker');
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: green
  namespace: zerodowntime
  labels:
    color: green
spec:
  replicas: 1
  selector:
    matchLabels:
      color: green
  template:
    metadata:
      labels:
        color: green
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          args:
            - mysqld
            - --lower_case_table_names=1
            - --log-bin=ON
            - --binlog_format=ROW
            - --server-id=1
            - --default-authentication-plugin=mysql_native_password
          env:
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: parameters
                  key: mysql_database
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: parameters
                  key: mysql_password
          ports:
            - containerPort: 3306
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: initscripts
      volumes:
        - name: initscripts
          configMap:
            name: green-scripts